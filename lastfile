#!/bin/bash

read -r -d '' USAGE << "EOU"
Usage: 
  lastfile [-h] [-s <number>] [<dir>]

Return the path to the latest file in the given directory, by default the 
current directory is used.

Options:
  -h
     Print this help message and exit
  -s <N>
     Skip N latest files and return the path to the N+1st latest file
EOU

function brag_and_exit {
	if [ -n "$1" ] ; then
		ERR_MESSAGE="$1"
	else
		ERR_MESSAGE='Something went wrong'
	fi

	echo 'Error: '"${ERR_MESSAGE}"$'\n\n'"${USAGE}"

	exit 1
}

BASEDIR='./'
SKIP='0'

LASTPARAM=''
while [[ -n "$1" ]] ; do
	if [[ $1 =~ ^-e$ ]] ; then
		shift
		SKIP="$1"
	elif [[ $1 =~ ^-h$ ]] ; then
		echo $USAGE
		exit
	elif [[ $1 =~ ^-[[:alnum:]]$ ]] ; then
		USELESS="$1" # Skip unknown options
	else
		LASTPARAM="$1"
	fi
	shift
done

echo "L $LASTPARAM"
exit

if [[ ! $SKIP =~ ^[[:digit:]]+$ ]] ; then
	brag_and_exit "Skip lines \"$SKIP\" is not a number"
fi

if [ -n "$1" ] ; then
	BASEDIR="$1"
fi

REALBASEDIR=$(realpath -m "$BASEDIR")

if [ ! -d $REALBASEDIR ] ; then
	brag_and_exit "\"$BASEDIR\" is not a directory"
fi

LASTFILES=$(ls -1t "$REALBASEDIR" | head -n $((SKIP+1)))
echo -n "$LASTFILES"
exit

LASTFILE=$(ls -1t "$REALBASEDIR" | head -n $((SKIP+1)) | tail -n 1)
echo ')))'"$LASTFILE"'((('

# // TODO: Gracefully report empty dirs

echo "${REALBASEDIR}${LASTFILE}"
